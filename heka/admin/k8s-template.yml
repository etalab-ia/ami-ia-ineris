################################################################################
##################################### ADMIN ####################################
################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin
  namespace: ${K8S_NAMESPACE}
  labels:
    micro-service: admin
    project: ${CI_PROJECT_NAME}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      micro-service: admin
  template:
    metadata:
      labels:
        micro-service: admin
        project: ${CI_PROJECT_NAME}
    spec:
      terminationGracePeriodSeconds: 60
      imagePullSecrets:
      - name: sia-docker-registry-credentials
      containers:
      - name: admin
        image: $CI_REGISTRY/heka/core/admin:1
        imagePullPolicy: Always
        resources:
          requests:
            cpu: 25m
            memory: 80Mi
          limits:
            cpu: 150m
            memory: 160Mi
        env:
        - name: FOR_GODS_SAKE_PLEASE_REDEPLOY
          value: ${CI_BUILD_REF}-${CI_PIPELINE_ID}-${CI_JOB_ID}
        - name: PROJECT_CONFIG
          valueFrom:
            secretKeyRef:
              name: project-environment
              key: PROJECT_CONFIG
        - name: SHARED_PROJECT_CONFIG
          valueFrom:
            secretKeyRef:
              name: project-environment
              key: SHARED_PROJECT_CONFIG
        - name: PROVIDER_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: project-environment
              key: PROVIDER_CREDENTIALS
        ports:
        - name: http
          containerPort: 80
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
            - name: Host
              value: KubernetesLivenessProbe
          initialDelaySeconds: 5
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
            - name: Host
              value: KubernetesReadinessProbe
          initialDelaySeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: admin
  namespace: ${K8S_NAMESPACE}
  labels:
    micro-service: admin
    project: ${CI_PROJECT_NAME}
spec:
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: http
  selector:
    micro-service: admin
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: admin
  namespace: ${K8S_NAMESPACE}
  labels:
    micro-service: admin
    project: ${CI_PROJECT_NAME}
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/ingress.allow-http: "${NOT_PROJECT_IS_HTTPS}"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/ssl-redirect: "${PROJECT_IS_HTTPS}"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-Script-Name /${PROJECT_NAME}/admin;
spec:
  tls:
  - hosts:
    - ${PROJECT_INGRESS_HOSTNAME}
    secretName: ingress-cert
  rules:
  - host: ${PROJECT_INGRESS_HOSTNAME}
    http:
      paths:
      - path: /${PROJECT_NAME}/admin(/|$)(.*)
        backend:
          serviceName: admin
          servicePort: http
      - path: /${PROJECT_NAME}/signin(/|$)(.*)
        backend:
          serviceName: admin
          servicePort: http
      - path: /${PROJECT_NAME}/forgot-password/retrieve(/|$)(.*)
        backend:
          serviceName: admin
          servicePort: http
